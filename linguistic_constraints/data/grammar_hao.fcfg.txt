## Author: Haotian He <haotianh@uw.edu> 
## Created by Feb. 20, 2014
## LING571-HW5

% start S
############################
# Grammar Rules
############################

S[SEM = <?subj(?vp)>] -> NP[NUM=?n,SEM=?subj] VP[NUM=?n,SEM=?vp]

NP[NUM=?n,SEM=<?det(?nom)> ] -> Det[NUM=?n,SEM=?det]  Nom[NUM=?n,SEM=?nom]
NP[LOC=?l,NUM=?n,SEM=?np] -> PropN[LOC=?l,NUM=?n,SEM=?np]
NP[LOC=?l,NUM=?n,SEM=<?conj(?np1,?np2)>] -> PropN[LOC=?l,NUM=?n,SEM=?np1] CONJ[SEM=?conj] PropN[LOC=?l,NUM=?n,SEM=?np2]

Nom[NUM=?n,SEM=?nom] -> N[NUM=?n,SEM=?nom]
Nom[NUM=?n,SEM=<?conj(?nom1,?nom2)>] -> N[NUM=?n,SEM=?nom1] CONJ[SEM=?conj] N[NUM=?n,SEM=?nom2]

VP[NUM=?n,SEM=?v] -> IV[NUM=?n,SEM=?v]
VP[NUM=?n,SEM=<?v(?obj)>] -> TV[NUM=?n,SEM=?v] NP[SEM=?obj]
VP[NUM=?n,SEM=<?conj(?v1,?v2)>] -> IV[NUM=?n,SEM=?v1] CONJ[SEM=?conj] IV[NUM=?n,SEM=?v2]
VP[NUM=?n,SEM=<?conj(?v1(?obj1),?v2(?obj2))>] -> TV[NUM=?n,SEM=?v1] NP[SEM=?obj1] CONJ[SEM=?conj] TV[NUM=?n,SEM=?v2] NP[SEM=?obj2]
VP[NUM=?n,SEM=<?conj(?v1(?obj1),?v2(?obj2))>] -> TV[NUM=?n,SEM=?v1] NP[SEM=?obj1] CONJ[SEM=?conj] IV[NUM=?n,SEM=?v2]

## Do auxiliaries
VP[+neg,NUM=?n,SEM=<app(?v,?vp)>] -> AuxP[-COP,NUM=?n,SEM=?v] VP[NUM=pl,SEM=?vp]
AuxP[COP=?c,NUM=?n,SEM=<app(?neg,?aux)>] -> Aux[COP=?c,NUM=?n,SEM=?aux] Neg[SEM=?neg]

VP[NUM=?n,SEM=?v] -> IV[NUM=?n,SEM=?v] PP

PP[LOC=?l,SEM=<app(?p,?np)>] -> P[LOC=?l,SEM=?p] NP[LOC=?l,SEM=?np]

############################
# Lexical Rules
############################

Det -> 'the'
N[NUM=sg] -> 'dog' | 'girl' | 'car' | 'child' | 'cat'
N[NUM=pl] -> 'dogs' | 'girls' | 'cars' | 'children' | 'cats'

IV[TENSE=pres,  NUM=sg] -> 'disappears' | 'walks' | 'barks'
TV[TENSE=pres, NUM=sg] -> 'sees' | 'likes'

IV[TENSE=pres,  NUM=pl] -> 'disappear' | 'walk' | 'bark'
TV[TENSE=pres, NUM=pl] -> 'see' | 'like'

IV[TENSE=past] -> 'disappeared' | 'walked' | 'barked'
TV[TENSE=past] -> 'saw' | 'liked'


PropN[-LOC,NUM=sg,SEM=<\P.P(John)>] -> 'John'
PropN[-LOC,NUM=sg,SEM=<\P.P(Mary)>] -> 'Mary'
PropN[-LOC,NUM=sg,SEM=<\P.P(Jack)>] -> 'Jack'
PropN[+LOC,NUM=sg,SEM=<\P.P(Seattle)>] -> 'Seattle'
PropN[-LOC,NUM=sg,SEM=<\Q. (- exists x.(person(x) & Q(x)))>] -> 'nobody'

Det[NUM=sg,SEM=<\P Q.all x.(P(x) -> Q(x))>] -> 'every'
Det[NUM=pl,SEM=<\P Q.all x.(P(x) -> Q(x))>] -> 'all'
Det[SEM=<\P Q.exists x.(P(x) & Q(x))>] -> 'some'
Det[NUM=sg,SEM=<\P Q.exists x.(P(x) & Q(x))>] -> 'a'
Det[NUM=sg,SEM=<\P Q.exists x.(P(x) & Q(x))>] -> 'an'
Det[NUM=sg,SEM=<\P Q.(- exists x.(P(x) & Q(x)))>] -> 'no'

N[NUM=sg,SEM=<\x.student(x)>] -> 'student'
N[NUM=pl,SEM=<\x.student(x)>] -> 'students'
N[NUM=sg,SEM=<\x.sandwich(x)>] -> 'sandwich'
N[NUM=sg,SEM=<\x.soda(x)>] -> 'soda'
N[NUM=sg,SEM=<\x.essay(x)>] -> 'essay'
N[NUM=sg,SEM=<\x.bagel(x)>] -> 'bagel'
N[NUM=sg,SEM=<\x.person(x)>] -> 'person'

CONJ[SEM=<\X Y.(\S. (X(S) | Y(S)))>] -> 'or'

Aux[-COP,NUM=sg,SEM=<\P x.P(x)>,tns=pres] -> 'does'

Neg[SEM=<\T P.T(\x.(- P(x)))>] -> 'not'

P[+LOC,SEM=<\X x.X(\y.in(x,y))>] -> 'in'

IV[NUM=sg,SEM=<\x.eat(x)>,TNS=pres] -> 'eats'
IV[NUM=pl,SEM=<\x.eat(x)>,TNS=pres] -> 'eat'
TV[NUM=sg,SEM=<\X x.X(\y.eat(x,y))>,TNS=pres] -> 'eats'
IV[NUM=pl,SEM=<\x.drink(x)>,TNS=pres] -> 'drink'
TV[NUM=sg,SEM=<\X x.X(\y.drink(x,y))>,TNS=pres] -> 'drinks'
TV[NUM=sg,SEM=<\X x.X(\y.write(x,y))>,TNS=pres] -> 'writes'